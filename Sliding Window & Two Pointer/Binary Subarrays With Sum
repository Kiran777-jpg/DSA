leetcode: https://leetcode.com/problems/binary-subarrays-with-sum/description/


******************************************************************
Sliding Window

class Solution {
public:
    int atmost(vector<int>& nums, int goal)
    {
        if(goal<0) return 0;
        int sum=0, count=0;
        int start=0, end=0;

        while(end<nums.size())
        {
            sum += nums[end];

            while(sum>goal)
                sum -= nums[start++];
            
            count += end-start+1;
            end++;
        }
        return count;
    }

    int numSubarraysWithSum(vector<int>& nums, int goal) {
        return atmost(nums, goal)-atmost(nums, goal-1);
    }
};

******************************************************************
HashMap

class Solution {
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        unordered_map<int, int> hashmap;
        hashmap[0] = 1;
        int preSum = 0;
        int ans=0;

        for(int i=0;i<nums.size();i++)
        {
            preSum += nums[i];
            ans += hashmap[preSum-goal];
            hashmap[preSum]++;
        }
        return ans;
    }
};

******************************************************************

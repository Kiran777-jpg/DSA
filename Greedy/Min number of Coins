GeeksforGeeks: https://practice.geeksforgeeks.org/problems/-minimum-number-of-coins4426/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=minimum-number-of-coins



****************************************************************************


// User function Template for C++

class Solution{
public:
    vector<int> minPartition(int N)
    {
        // code here
        vector<int> den = {1, 2, 5, 10, 20, 50, 100, 200, 500, 2000};
        vector<int> ans;
        while(N)
        {
            int value=0;
            for(int i=0;i<den.size();i++)
            {
                if(den[i]<=N)
                    value=den[i];
                else
                    break;
            }
            N-=value;
            ans.push_back(value);
        }
        return ans;
    }
};

****************************************************************************

// User function Template for C++

class Solution{
public:
    vector<int> minPartition(int N)
    {
        // code here
        vector<int> den = {1, 2, 5, 10, 20, 50, 100, 200, 500, 2000};
        vector<int> ans;
        int idx=den.size()-1;
        while(N)
        {
            int value=0, start=0, end=idx;
            while(start<=end)
            {
                int mid=start+(end-start)/2;
                if(den[mid]==N || (mid<den.size()-1 && den[mid]<=N && den[mid+1]>N) || mid==den.size()-1)
                {
                    value=den[mid];
                    idx=mid;
                    break;
                }
                else if(den[mid]>N)
                    end=mid-1;
                else
                    start=mid+1;
            }
            N-=value;
            ans.push_back(value);
        }
        return ans;
    }
};

****************************************************************************

// User function Template for C++

class Solution{
public:
    vector<int> minPartition(int N)
    {
        // code here
        vector<int> den={1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 };
        int sz = den.size();
        vector<int> ans;
        for(int i=sz-1;i>=0;i--)
        {
            while(N>=den[i])
            {
                N-=den[i];
                ans.push_back(den[i]);
            }
        }
        return ans;
    }
};

****************************************************************************

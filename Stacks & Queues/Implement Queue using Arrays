geeksforgeeks: https://practice.geeksforgeeks.org/problems/implement-queue-using-array/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=implement-queue-using-array



********************************************************************

#include <iostream>
using namespace std;

class SolutionQueue
{
    private:
        int N;
        int *arr;
        int front;
        int rear;
        
    public:
        SolutionQueue()
        {
            this->N = 5;
            this->front = -1;
            this->rear = -1;
            this->arr = new int[N];
        }
        
        void push(int data)
        {
            if(rear == N-1)
            {
                cout<<"overflow"<<endl;
                return;
            }
            if(front==-1 && rear==-1)
                front = rear=0;
            else
                rear++;
            arr[rear]=data;
        }
        
        int pop()
        {
            if(front==-1)
            {
                cout<<"underflow"<<endl;
                return -1;
            }
            if(front==rear)
            {
                int temp = arr[front];
                front=rear=-1;
                return temp;
            }
            else
                return arr[front++];
        }
        
        void display()
        {
            for(int i=front;i<=rear;i++)
                cout<<arr[i]<<" ";
            cout<<endl;
        }
        
        bool empty()
        {
            return (front==-1 && rear==-1);
        }
        
        int size()
        {
            if(front==-1 && rear==-1) return 0;
            return rear-front+1;
        }
        
        int top()
        {
            if(front==-1) return -1;
            return arr[front];
        }
};

int main()
{
    SolutionQueue q;
    q.push(1);
    q.push(2);
    q.push(3);
    q.push(4);
    q.push(5);
    q.display();
    q.push(6);
    q.pop();
    q.pop();
    q.display();
    cout<<q.empty()<<endl;
    cout<<q.top()<<endl;
    cout<<q.size()<<endl;
}

********************************************************************

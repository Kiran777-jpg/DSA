https://www.tutorialcup.com/interview/stack/number-of-nges-to-the-right.htm


*********************************************************

#include <iostream>
#include <vector>
#include <stack>
#include <unordered_map>
using namespace std;

int nges(unordered_map<int, int> &hashmap, int &i)
{
    return hashmap[i];
}

int main()
{
    vector<int> arr = {3, 4, 2, 7, 5, 8, 10, 6};
    stack<int> st;
    unordered_map<int, int> hashmap;
    
    for(int i=arr.size()-1; i>=0;i--)
    {
        while(!st.empty() && st.top()<=arr[i])
            st.pop();
        hashmap[i] = st.size();
        st.push(arr[i]);
    }
    
    int t;
    cin>>t;
    while(t--)
    {
        int i;
        cin>>i;
        cout<<nges(hashmap, i)<<endl;
    }
}


******************************************************

#include <bits/stdc++.h> 
using namespace std; 
  
void computeNext(int next[], int a[], int n){ 
    
    stack<int> s; 
  
    s.push(0); 
  
    for(int i = 1; i < n; i++){ 
  
        while(!s.empty()){ 
  
            int cur = s.top(); 
  
            if(a[cur] < a[i]){ 
                next[cur] = i; 
  
                s.pop(); 
            } 
  
            else{
                break;
            }    
        } 
  
        s.push(i); 
    } 
  
    while(!s.empty()){ 
  
        int cur = s.top(); 
  
        next[cur] = -1; 
  
        s.pop(); 
    } 
} 
  
void count(int a[], int dp[], int n){ 
     
    int next[n]; 
    memset(next, 0, sizeof(next)); 
  
    computeNext(next, a, n); 
  
    for(int i = n-2; i >= 0; i--){ 
  
        if(next[i] == -1){ 
            dp[i] = 0; 
        }    
  
        else{
            dp[i] = 1 + dp[next[i]]; 
        }    
    } 
} 
  
int answerQuery(int dp[], int index){ 
    return dp[index]; 
} 
  
int main(){ 
    int a[] = {3, 4, 2, 7, 5, 8, 10, 6}; 
    int n = sizeof(a) / sizeof(a[0]); 
  
    int dp[n]; 
  
    count(a, dp, n); 
  
    cout<<answerQuery(dp, 0)<<endl; 
  
    cout<<answerQuery(dp, 5)<<endl; 
  
    return 0; 
}


******************************************************

void count(int a[], int n, int q){ 
    int c = 0;
    int lastEle = a[q];
    
    for(int i=q+1; i<n; i++){
        if(a[i]>lastEle){
            lastEle = a[i];
            c++;
        }    
    }
    
    cout<<c<<endl;
} 
  
int main(){ 
    int a[] = {3, 4, 2, 7, 5, 8, 10, 6}; 
    int n = sizeof(a) / sizeof(a[0]); 
  
    count(a, n, 0); 
  
    count(a, n, 5); 
  
    return 0; 
}

******************************************************

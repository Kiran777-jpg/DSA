geeksforgeeks: https://www.geeksforgeeks.org/convert-infix-prefix-notation/


*******************************************************************

#include <iostream>
#include <stack>
#include <algorithm>
using namespace std;

int prec(char c)
{
    if(c=='^') return 3;
    else if(c=='*'||c=='/') return 2;
    else if(c=='+'||c=='-') return 1;
    return 0;
}

int main()
{
    // string s = "K+L-M*N+(O^P)*W/U/V*T+Q";
    // string s = "x+y*z/w+u";
    string s = "a+b";
    stack<char> st;
    string ans="";
    
    for(int i=s.size()-1;i>=0;i--)
    {
        if((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z'))
            ans += s[i];
        else
        {
            if(st.empty() || s[i]==')' || (st.top()==')' && prec(st.top())<=prec(s[i]) && s[i]!='^') || (!st.empty() && s[i]=='^' && st.top()!='^'))
                st.push(s[i]);
            else
            {
                while(!st.empty() && ((prec(st.top())>prec(s[i]) && s[i]!='^') || (s[i]=='^' && st.top()=='^')))
                {
                    if(st.top()==')') break;
                    ans += st.top();
                    st.pop();
                }
                if(s[i]=='(' && st.top()==')') st.pop();
                if(s[i]!='(') st.push(s[i]);
            }
        }
    }
    while(!st.empty())
    {
        ans += st.top();
        st.pop();
    }
    reverse(ans.begin(), ans.end());
    cout<<ans<<endl;
}

*******************************************************************

**********************************************************************
Pivot as Last Element


#include <iostream>
#include <vector>
using namespace std;

int partition(vector<int> &arr, int start, int end)
{
    int pivot=arr[end];
    int i=start-1;
    for(int j=start;j<end;j++)
    {
        if(arr[j]<pivot)
            swap(arr[++i], arr[j]);
    }
    swap(arr[++i], arr[end]);
    for(int i=0;i<arr.size();i++)
        cout<<arr[i]<<" ";
    cout<<endl;
    return i;
}

void quickSort(vector<int> &arr, int start, int end)
{
    if(start>=end)
        return;
    int p=partition(arr, start, end);
    // cout<<p<<endl;
    quickSort(arr, start, p-1);
    quickSort(arr, p+1, end);
}

int main()
{
    vector<int> arr= {3,2,1,5,6,4};
    quickSort(arr, 0, arr.size()-1);
    for(int i=0;i<arr.size();i++)
        cout<<arr[i]<<" ";
    cout<<endl;
}


****************************************************************************
Pivot as First Element



#include <iostream>
#include <vector>
using namespace std;

int partition(vector<int> &arr, int start, int end)
{
    int pivot=arr[end];
    int i=start-1;
    for(int j=start;j<end;j++)
    {
        if(arr[j]<pivot)
            swap(arr[++i], arr[j]);
    }
    swap(arr[++i], arr[end]);
    // for(int i=0;i<arr.size();i++)
    //     cout<<arr[i]<<" ";
    // cout<<endl;
    return i;
}

void quickSort(vector<int> &arr, int start, int end)
{
    if(start>=end)
        return;
    int p=partition(arr, start, end);
    quickSort(arr, start, p-1);
    quickSort(arr, p+1, end);
}

int main()
{
    vector<int> arr= {3,2,1,5,6,4};
    quickSort(arr, 0, arr.size()-1);
    for(int i=0;i<arr.size();i++)
        cout<<arr[i]<<" ";
    cout<<endl;
}

****************************************************************************


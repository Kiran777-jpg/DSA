Problem Description
Given two integer arrays, A and B of size N and M, respectively. Your task is to find all the common elements in both the array.

NOTE:

Each element in the result should appear as many times as it appears in both arrays.
The result can be in any order.


Problem Constraints
1 <= N, M <= 105

1 <= A[i] <= 109



Input Format
First argument is an integer array A of size N.

Second argument is an integer array B of size M.



Output Format
Return an integer array denoting the common elements.



Example Input
Input 1:

 A = [1, 2, 2, 1]
 B = [2, 3, 1, 2]
Input 2:

 A = [2, 1, 4, 10]
 B = [3, 6, 2, 10, 10]


Example Output
Output 1:

 [1, 2, 2]
Output 2:

 [2, 10]


Example Explanation
Explanation 1:

 Elements (1, 2, 2) appears in both the array. Note 2 appears twice in both the array.
Explantion 2:

 Elements (2, 10) appears in both the array.
 
 
 
 ********************************************************************************************
 
 vector<int> Solution::solve(vector<int> &A, vector<int> &B) {
    unordered_map<int, int> hashmap;
    vector<int> ans;
    for(int x : A) hashmap[x]++;
    for(int x : B)
    {
        if(hashmap.find(x)!=hashmap.end() && hashmap[x]!=0)
        {
            ans.push_back(x);
            hashmap[x]--;
        }
    }
    return ans;
}
 
 ********************************************************************************************
 
 
 vector<int> Solution::solve(vector<int> &A, vector<int> &B) {
    unordered_map<int, int> hashmap1;
    unordered_map<int, int> hashmap2;
    vector<int> ans;

    for(int x : A) hashmap1[x]++;
    for(int x : B) hashmap2[x]++;
    for(auto item : hashmap1)
    {
        int value = min(item.second, hashmap2[item.first]);
        while(value)
        {
            ans.push_back(item.first);
            value--;
        }
    }
    return ans;
}

 
 ********************************************************************************************

leetcode: https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/description/

class Solution {
public:
    
    bool divisorPossible(vector<int> &nums, int threshold, int mid)
    {
        int ans=0;
        for(int x : nums)
            ans += ceil((double)x/mid);
        return (ans <= threshold);
    }
    
    int smallestDivisor(vector<int>& nums, int threshold) {
        int start=1, end = *max_element(nums.begin(), nums.end());
        if(nums.size() == threshold)
            return end;
        
        int result =0;
        while(start<=end)
        {
            int mid = start+(end-start)/2;
            if(divisorPossible(nums, threshold, mid))
            {
                result = mid;
                end = mid-1;
            }
            else
                start=mid+1;
        }
        return result;
    }
};

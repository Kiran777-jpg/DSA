leetcode: https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/description/

class Solution {
public:
    
    bool daysPossible(vector<int> &bloomDay, int m, int k, int mid)
    {
        int j=0, count=0, bouquets=0;
        while(j < bloomDay.size())
        {
            if(bloomDay[j] <= mid)
                count++;
            else
                count=0;
            if(count == k)
            {
                bouquets++;
                count=0;
            }
            
            j++;
        }
        
        return (bouquets >= m);
    }
    
    int minDays(vector<int>& bloomDay, int m, int k) {
        if(m*k > bloomDay.size())
            return -1;
        
        long long int start=1, end=*max_element(bloomDay.begin(), bloomDay.end());
        long long int ans=0;
        while(start<=end)
        {
            long long int mid = start+(end-start)/2;
            if(daysPossible(bloomDay, m, k, mid))
            {
                ans = mid;
                end = mid-1;
            }
            else
                start=mid+1;
        }
        return ans;
    }
};

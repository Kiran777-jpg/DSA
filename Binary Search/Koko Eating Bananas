leetcode: https://leetcode.com/problems/koko-eating-bananas/description/
geeksforgeeks: https://practice.geeksforgeeks.org/problems/koko-eating-bananas/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=koko-eating-bananas


class Solution {
public:
    long long int kMidSpeed(vector<int> &piles, int mid)
    {
        long long int ans=0;
        for(int x : piles)
            ans+=ceil((double)x/mid);
        return ans;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        if(piles.size() == h)
            return *max_element(piles.begin(), piles.end());
        
        long long int start=1, end=*max_element(piles.begin(), piles.end());
        int ans=0;
        while(start<=end)
        {
            long long int mid = start+(end-start)/2;
            long long int sum = kMidSpeed(piles, mid);
            // if(ans == h)
            //     break;
            if(sum > h)
                start=mid+1;
            else{
                ans=mid;
                end=mid-1;
            }
        }
        return ans;
    }
};

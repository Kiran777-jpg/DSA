leetcode: https://leetcode.com/problems/median-of-two-sorted-arrays/
geeksforgeeks: https://practice.geeksforgeeks.org/problems/median-of-2-sorted-arrays-of-different-sizes/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=median-of-2-sorted-arrays-of-different-sizes

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        if(nums1.size() > nums2.size()) return findMedianSortedArrays(nums2, nums1);
        int n = nums1.size();
        int m = nums2.size();
        int k = (n+m+1)/2;
        int start=0, end=n;
        while(start<=end)
        {
            int mid1 = start+(end-start)/2;
            int mid2 = k-mid1;
            
            int l1 = mid1==0?INT_MIN:nums1[mid1-1];
            int l2 = mid2==0?INT_MIN:nums2[mid2-1];
            
            int r1 = mid1==n?INT_MAX:nums1[mid1];
            int r2 = mid2==m?INT_MAX:nums2[mid2];
            
            if(l1 <= r2 && l2 <= r1)
            {
                if((n+m)%2==0)
                    return (max(l1,l2)+min(r1,r2))/2.0;
                else
                    return max(l1,l2);
            }
            
            if(l2 > r1)
                start=mid1+1;
            else if(l1 > r2)
                end=mid1-1;
        }
        return 0.0;
    }
};

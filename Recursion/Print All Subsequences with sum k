


*******************************************************************
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void subsets(vector<int> &arr, vector<int> &v, int i, int target, int sum, vector<vector<int>> &ans)
{
    if(sum > target) return;
    if(i==arr.size())
    {
        if(sum==target)
            ans.push_back(v);
        return;
    }
    v.push_back(arr[i]);
    subsets(arr, v, i+1, target, sum+arr[i], ans);
    v.pop_back();
    subsets(arr, v, i+1, target, sum, ans);
}

int main()
{
    vector<int> arr = {1,2,3};
    vector<int> v;
    vector<vector<int>> ans;
    subsets(arr, v, 0, 3, 0, ans);
    // sort(ans.begin(), ans.end());
    for(auto arrList : ans)
    {
        for(auto item : arrList)
            cout<<item;
        cout<<endl;
    }
}
*********************************************************************

#include <iostream>
#include <vector>
using namespace std;

void subsets(vector<int> &arr, int target, int start, vector<int> v, vector<vector<int>> &ans)
{
    if(target < 0) return;
   if(target==0)
   {
       ans.push_back(v);
       return;
   }
   for(int i=start;i<arr.size();i++)
   {
       v.push_back(arr[i]);
       subsets(arr, target-arr[i], i+1, v, ans);
       v.pop_back();
   }
}

int main()
{
    vector<int> arr = {1,2,3,4};
    vector<vector<int>> ans;
    vector<int> v;
    int target=3;
    subsets(arr, target, 0, v, ans);
    for(auto arrList : ans)
    {
        for(auto item : arrList)
            cout<<item;
        cout<<endl;
    }
}

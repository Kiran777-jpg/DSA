leetcode: https://leetcode.com/problems/palindrome-partitioning/


*******************************************************
Tc: o(2^n *k*n/2), Sc:o(x*k)

class Solution {
public:
    bool isPalindrome(string s, int start, int end)
    {
        while(start<end)
        {
            if(s[start++]!=s[end--]) return false;
        }
        return true;
    }
    void partitionUtil(string s, int start, vector<string> v, vector<vector<string>> &ans)
    {
        if(start==s.size())
        {
            ans.push_back(v);
            return;
        }

        for(int i=start;i<s.size();i++)
        {
            if(i==start || isPalindrome(s, start, i))
            {
                v.push_back(s.substr(start, i-start+1));
                partitionUtil(s, i+1, v, ans);
                v.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> v;
        partitionUtil(s, 0, v, ans);
        return ans;
    }
};

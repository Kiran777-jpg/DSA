


***********************************************************************************************************************


#include <iostream>
#include <vector>
#include <stack>
using namespace std;

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int data)
    {
        this->data=data;
        left=right=NULL;
    }
};

void preorder(Node* root)
{
    if(root==NULL) return;
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}

void inorder(Node* root)
{
    if(root==NULL) return;
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

void postorder(Node* root)
{
    if(root==NULL) return;
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}

void Treversals(Node* root)
{
    stack<Node*> st;
    Node* node = root;
    vector<int> preorder;
    vector<int> inorder;
    vector<int> postorder;
    
    while(!st.empty() || node!=NULL)
    {
        if(node!=NULL)
        {
            preorder.push_back(node->data);
            st.push(node);
            node=node->left;
        }
        else
        {
            inorder.push_back(st.top()->data);
            if(st.top()->right==NULL)
            {
                Node* temp=st.top();
                st.pop();
                postorder.push_back(temp->data);
                while(!st.empty() && temp==st.top()->right)
                {
                    temp=st.top();
                    st.pop();
                    postorder.push_back(temp->data);
                }
            }
            else
                node=st.top()->right;
        }
    }
    
    for(int x : preorder)
        cout<<x<<" ";
    cout<<endl;
    
    for(int x : inorder)
        cout<<x<<" ";
    cout<<endl;
    
    for(int x : postorder)
        cout<<x<<" ";
    cout<<endl;
}

int main()
{
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right=new Node(5);
    
    root->left->left=new Node(3);
    root->left->right=new Node(4);
    
    root->right->left=new Node(6);
    root->right->right=new Node(7);
    
    // Node* root = new Node(1);
    // root->left = new Node(2);
    // root->right=new Node(7);
    
    // root->left->left=new Node(3);
    // root->left->left->right=new Node(4);
    
    // root->left->left->right->right=new Node(5);
    // root->left->left->right->right->right=new Node(6);
    // root->right->left=new Node(8);
    
    preorder(root);
    cout<<endl;
    inorder(root);
    cout<<endl;
    postorder(root);
    cout<<endl;
    Treversals(root);
}


***********************************************************************************************************************


#include <iostream>
#include <vector>
#include <stack>
using namespace std;

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int data)
    {
        this->data=data;
        left=right=NULL;
    }
};

void preorder(Node* root)
{
    if(root==NULL) return;
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}

void inorder(Node* root)
{
    if(root==NULL) return;
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

void postorder(Node* root)
{
    if(root==NULL) return;
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}

void Treversals(Node* root)
{
    stack<pair<Node*, int>> st;
    Node* node = root;
    vector<int> pre, in, post;
    
    st.push({node, 1});
    while(!st.empty())
    {
        auto it=st.top();
        if(it.second==1)
        {
            pre.push_back(it.first->data);
            st.top().second++;
            if(it.first->left)
                st.push({it.first->left, 1});
        }
        else if(it.second==2)
        {
            in.push_back(it.first->data);
            st.top().second++;
            if(it.first->right)
                st.push({it.first->right, 1});
        }
        else
        {
            st.pop();
            post.push_back(it.first->data);
        }
        
    }
    
    for(int x : pre)
        cout<<x<<" ";
    cout<<endl;
    
    for(int x : in)
        cout<<x<<" ";
    cout<<endl;
    
    for(int x : post)
        cout<<x<<" ";
    cout<<endl;
}

int main()
{
    // Node* root = new Node(1);
    // root->left = new Node(2);
    // root->right=new Node(5);
    
    // root->left->left=new Node(3);
    // root->left->right=new Node(4);
    
    // root->right->left=new Node(6);
    // root->right->right=new Node(7);
    
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right=new Node(7);
    
    root->left->left=new Node(3);
    root->left->left->right=new Node(4);
    
    root->left->left->right->right=new Node(5);
    root->left->left->right->right->right=new Node(6);
    root->right->left=new Node(8);
    
    preorder(root);
    cout<<endl;
    inorder(root);
    cout<<endl;
    postorder(root);
    cout<<endl;
    Treversals(root);
}


***********************************************************************************************************************
